{"ast":null,"code":"import _defineProperty from \"/Users/henrymerritt/Documents/dataBaseEntry/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrymerritt/Documents/dataBaseEntry/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//importing all relevant files to this file.\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Slider from './Slider';\nimport Checkbox from './checkBox';\nimport axios from 'axios'; //importing css to this file\n\nimport './App.css'; // creating a Constant for the options that the users can click on\n\nconst OPTIONS = [\"Wine\", \"Beer\", \"Spirits\"];\nconst inputParsers = {\n  uppercase(input) {\n    return input.toUpperCase();\n  },\n\n  number(input) {\n    return parseFloat(input);\n  }\n\n}; //overall App class which takes all\n\nclass App extends React.Component {\n  //constructor for the App class in which a super with the returned values passed through\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = changeEvent => {\n      //ginds the specific checkbox to be checked off\n      const name = changeEvent.target.name; // changes the state dependant on whether it was previously true or false\n\n      this.setState(prevState => ({\n        checkboxes: _objectSpread({}, prevState.checkboxes, {\n          [name]: !prevState.checkboxes[name]\n        })\n      }));\n    };\n\n    this.createCheckbox = option => React.createElement(Checkbox, {\n      label: option,\n      isSelected: this.state.checkboxes[option],\n      onCheckboxChange: this.handleCheckboxChange,\n      key: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    });\n\n    this.createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n    this.handleSubmit = this.handleSubmit.bind(this); //sets the checkbox values to false so it can be presented so to people.\n\n    this.state = {\n      ProductData: [],\n      checkboxes: OPTIONS.reduce((options, option) => _objectSpread({}, options, {\n        [option]: false\n      }), {}),\n      wineCheck: false,\n      beerCheck: false,\n      spiritCheck: false\n    };\n  } //Submission for later use in order to return to API and place into database through Python\n\n\n  submission(event) {\n    var barName = this.getElementById(\"barName\").value;\n    var craftSlide = this.getElementById(\"craftBeerSlider\").value;\n    var wineSlide = this.getElementById(\"wineListSlider\").value;\n    var wineChecker = this.getElementById(\"wineCheck\").value;\n    var beerChecker = this.getElementById(\"beerCheck\").value;\n    var spiritCheck = this.getElementById(\"spiritCheck\").value;\n    var file = this.getElementById(\"dataFile\").value;\n    console.log(\"getting here\");\n    axios.get('https://localhost:5001/api/addBar/{barName}').then(response => {\n      console.log(response);\n      this.setState({\n        ProductData: response.data\n      });\n    });\n  }\n\n  //allows for event and changing of the checkbox\n  handleSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const data = new FormData(form);\n\n    for (let name of data.keys()) {\n      const input = form.elements[name];\n      const parserName = input.dataset.parse;\n\n      if (parserName) {//const parser = \n      }\n    }\n\n    axios.get('https://localhost:5001/api/addBar/{barName}').then(response => {\n      console.log(response);\n      this.setState({\n        ProductData: response.data\n      });\n    });\n  }\n\n  //calls the render function\n  render() {\n    //this is the return function that returns the html that helps create the app\n    return (//a div class in order to have the specific section in question\n      React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"What is the Barname: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"barName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" Craft Beer \"), React.createElement(Slider, {\n        name: \"craftBeerSlider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \" Wine List Complexity\"), React.createElement(Slider, {\n        name: \"wineListSlider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Beer Or Wine \"), React.createElement(Slider, {\n        name: \"beerOrWine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Wine, Beer Or Spirits \"), React.createElement(\"div\", {\n        className: \"checkboxes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: this.onCheckboxChange,\n        onChange: this.handleCheckboxChange,\n        key: \"Wine\",\n        name: \"wineCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), OPTIONS[0], React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"beerCheck\",\n        defaultChecked: this.onCheckboxChange,\n        onChange: this.handleCheckboxChange,\n        key: \"Beer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), OPTIONS[1], React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"spiritsCheck\",\n        defaultChecked: this.onCheckboxChange,\n        onChange: this.handleCheckboxChange,\n        key: \"Spirits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), OPTIONS[2]), React.createElement(\"div\", {\n        className: \"fileUploader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"dataFile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"submitButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Submit\")))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/henrymerritt/Documents/dataBaseEntry/src/App.js"],"names":["React","Component","ReactDOM","Slider","Checkbox","axios","OPTIONS","inputParsers","uppercase","input","toUpperCase","number","parseFloat","App","constructor","props","handleCheckboxChange","changeEvent","name","target","setState","prevState","checkboxes","createCheckbox","option","state","createCheckboxes","map","handleSubmit","bind","ProductData","reduce","options","wineCheck","beerCheck","spiritCheck","submission","event","barName","getElementById","value","craftSlide","wineSlide","wineChecker","beerChecker","file","console","log","get","then","response","data","preventDefault","form","FormData","keys","elements","parserName","dataset","parse","render","onCheckboxChange"],"mappings":"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","sourcesContent":["//importing all relevant files to this file.\nimport React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Slider from './Slider'\nimport Checkbox from './checkBox';\nimport axios from 'axios';\n\n//importing css to this file\nimport './App.css';\n\n// creating a Constant for the options that the users can click on\nconst OPTIONS = [\"Wine\", \"Beer\", \"Spirits\"];\n\nconst inputParsers = {\n\tuppercase(input){\n\t\treturn input.toUpperCase();\n\t},\n\tnumber(input){\n\t\treturn parseFloat(input);\n\t},\n};\n\n\n\n//overall App class which takes all\nclass App extends React.Component {\n  //constructor for the App class in which a super with the returned values passed through\n  constructor(props){\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //sets the checkbox values to false so it can be presented so to people.\n    this.state={\n    \tProductData: [],\n      checkboxes: OPTIONS.reduce(\n          (options, option) => ({\n            ...options,\n            [option]:false\n          }),\n          {}\n        ),\n      wineCheck: false,\n      beerCheck: false,\n      spiritCheck: false,\n    };\n  }\n  //Submission for later use in order to return to API and place into database through Python\n\t submission(event){\n          var barName = this.getElementById(\"barName\").value;\n          var craftSlide = this.getElementById(\"craftBeerSlider\").value;\n          var wineSlide = this.getElementById(\"wineListSlider\").value;\n          var wineChecker = this.getElementById(\"wineCheck\").value;\n          var beerChecker = this.getElementById(\"beerCheck\").value;\n          var spiritCheck = this.getElementById(\"spiritCheck\").value;\n          var file = this.getElementById(\"dataFile\").value;\n          console.log(\"getting here\");\n         axios.get('https://localhost:5001/api/addBar/{barName}')\n         \t\t.then((response) =>{\n         \t\t\tconsole.log((response));\n         \t\t\tthis.setState({\n         \t\t\t\tProductData: response.data\n         \t\t\t});\n         \t\t});\n         };\n\n  // is a super function in order to select all values either selecting or de-selecting\n  \n\n  // allows for a passing through in order to select all checkboxes as true  \n\n  // allows for the changing between true and false for individual checkboxes\n  handleCheckboxChange = changeEvent => {\n    //ginds the specific checkbox to be checked off\n    const { name } = changeEvent.target;\n    // changes the state dependant on whether it was previously true or false\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n    //allows for event and changing of the checkbox\n   handleSubmit(event){\n   \tevent.preventDefault();\n   \tconst form = event.target;\n   \tconst data = new FormData(form);\n   \tfor(let name of data.keys()){\n   \t\tconst input = form.elements[name];\n   \t\tconst parserName = input.dataset.parse;\n   \t\tif(parserName){\n   \t\t\t//const parser = \n   \t\t}\n   \t}\n   \taxios.get('https://localhost:5001/api/addBar/{barName}')\n    .then((response) =>{\n         \t\t\tconsole.log((response));\n         \t\t\tthis.setState({\n         \t\t\t\tProductData: response.data\n         \t\t\t});\n         \t\t});\n  };\n\n  // allows for the creation within this class whilst using the imported files\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n  // creates all the checkboxes based on the constants that are the options\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n  //calls the render function\n  render(){\n    //this is the return function that returns the html that helps create the app\n    return (\n      //a div class in order to have the specific section in question\n      <div className=\"App\">\n        <header>\n         <form onSubmit = {this.handleSubmit}>\n           <label>\n             <h2>What is the Barname: <br/></h2>\n              <input type = \"text\" name =\"barName\"/>\n            </label>\n            <h2> Craft Beer </h2>\n            <Slider name=\"craftBeerSlider\"/>\n            <h2> Wine List Complexity</h2>\n            <Slider name=\"wineListSlider\"/>\n            <h2>Beer Or Wine </h2>\n            <Slider name=\"beerOrWine\" />\n            <h2>Wine, Beer Or Spirits </h2>\n            <div className = \"checkboxes\">\n              <input type =\"checkbox\"\n              defaultChecked={this.onCheckboxChange}\n              onChange = {this.handleCheckboxChange} \n              key = \"Wine\"\n              name = \"wineCheck\"/>\n              {OPTIONS[0]}\n               <input type =\"checkbox\"\n              name=\"beerCheck\"\n              defaultChecked={this.onCheckboxChange}\n              onChange = {this.handleCheckboxChange} \n              key = \"Beer\"/> \n              {OPTIONS[1]}\n               <input type =\"checkbox\"\n              name=\"spiritsCheck\"\n              defaultChecked={this.onCheckboxChange}\n              onChange = {this.handleCheckboxChange}\n              key=\"Spirits\"/>\n              {OPTIONS[2]}\n            </div>\n            <div className = \"fileUploader\">\n              <input type=\"file\" name=\"file\" id=\"dataFile\"/>\n            </div>\n            <div className = \"submitButton\">\n              <button>Submit</button>\n            </div>\n        </form>\n       </header>\n    </div>\n  );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}