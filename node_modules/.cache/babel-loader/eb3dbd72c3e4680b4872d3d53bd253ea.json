{"ast":null,"code":"var _jsxFileName = \"/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nfunction submission(props) {\n  var barName = this.getElementById(\"barName\").value;\n}\n\nfunction Slider() {\n  state = {\n    slots: 10,\n    start: 0,\n    end: 5,\n    labelMode: \"mid\"\n  };\n\n  onDragOver = e => {\n    e.preventDefault();\n  };\n\n  onDragStart = e => {\n    let slider = e.target.dataset.slider;\n    this.sliderType = slider;\n  };\n\n  onDrag = e => {};\n\n  onDrop = (e, target) => {\n    let source = this.sliderType;\n    let slot = Number(e.target.dataset.slot);\n    if (isNaN(slot)) return;\n    this.setState({\n      end: slot\n    }, () => {\n      console.log(this.state);\n    });\n    this.sliderType = null;\n  };\n\n  MaxSlider = () => {\n    return React.createElement(\"div\", {\n      \"data-slider\": \"max\",\n      onDragStart: this.onDragStart,\n      onTouchStart: this.onDragStart,\n      onDrag: this.onDrag,\n      draggable: true,\n      className: \"slider-thumb slider-thumb-max\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  };\n\n  let scale = [];\n  let slider = [];\n  let currentScale = [];\n  let maxThumb = null;\n\n  for (let i = 0; i <= this.state.slots; i++) {\n    let label = \"\";\n\n    if (i == 0 || i == 5 || i == 10) {\n      label = i;\n    }\n\n    scale.push(React.createElement(\"div\", {\n      key: i,\n      className: \"slot-scale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, label));\n    let currentLabel = \"\";\n\n    if (i === this.state.end) {\n      currentLabel = i;\n    }\n\n    currentScale.push(React.createElement(\"div\", {\n      key: i,\n      className: \"slot-scale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, currentLabel));\n\n    if (i === this.state.end) {\n      maxThumb = React.createElement(this.MaxSlider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    } else {\n      maxThumb = null;\n    }\n\n    let lineClass = \"line\";\n\n    if (i < this.state.end) {\n      lineClass += \" line-selected\";\n    }\n\n    slider.push(React.createElement(\"div\", {\n      \"data-slot\": i,\n      onDragOver: this.onDragOver,\n      onTouchMove: this.onDragOver,\n      onTouchEnd: this.onDrop,\n      onDrop: this.onDrop,\n      key: i,\n      className: \"slot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-slot\": i,\n      className: lineClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"scale-mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), maxThumb));\n  }\n\n  return React.createElement(\"div\", {\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \" Slider for Me\"), React.createElement(\"div\", {\n    className: \"topSlider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"slider-scale\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, scale), React.createElement(\"div\", {\n    className: \"slider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, slider), React.createElement(\"div\", {\n    className: \"slider-selected-scale\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, currentScale))));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const craftBeer = new Slider();\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      key: \"barName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"What is the Barname: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"barName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      key: \"craft\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, craftBeer))));\n  }\n\n}\n\nexport { App, Slider };","map":{"version":3,"sources":["/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js"],"names":["React","ReactDOM","submission","props","barName","getElementById","value","Slider","state","slots","start","end","labelMode","onDragOver","e","preventDefault","onDragStart","slider","target","dataset","sliderType","onDrag","onDrop","source","slot","Number","isNaN","setState","console","log","MaxSlider","scale","currentScale","maxThumb","i","label","push","currentLabel","lineClass","App","Component","constructor","render","craftBeer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,WAAP;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAChB,MAAIC,OAAO,GAAG,KAAKC,cAAL,CAAoB,SAApB,EAA+BC,KAA7C;AACD;;AAGT,SAASC,MAAT,GAAiB;AACfC,EAAAA,KAAK,GAAG;AACNC,IAAAA,KAAK,EAAE,EADD;AAENC,IAAAA,KAAK,EAAC,CAFA;AAGNC,IAAAA,GAAG,EAAE,CAHC;AAINC,IAAAA,SAAS,EAAE;AAJL,GAAR;;AAMAC,EAAAA,UAAU,GAAIC,CAAD,IAAM;AACjBA,IAAAA,CAAC,CAACC,cAAF;AACD,GAFD;;AAGAC,EAAAA,WAAW,GAAIF,CAAD,IAAM;AAClB,QAAIG,MAAM,GAAGH,CAAC,CAACI,MAAF,CAASC,OAAT,CAAiBF,MAA9B;AACA,SAAKG,UAAL,GAAkBH,MAAlB;AACD,GAHD;;AAIAI,EAAAA,MAAM,GAAIP,CAAD,IAAO,CACf,CADD;;AAGAQ,EAAAA,MAAM,GAAG,CAACR,CAAD,EAAGI,MAAH,KAAa;AACpB,QAAIK,MAAM,GAAG,KAAKH,UAAlB;AACA,QAAII,IAAI,GAAGC,MAAM,CAACX,CAAC,CAACI,MAAF,CAASC,OAAT,CAAiBK,IAAlB,CAAjB;AAEE,QAAGE,KAAK,CAACF,IAAD,CAAR,EAAgB;AAChB,SAAKG,QAAL,CAAc;AACZhB,MAAAA,GAAG,EAACa;AADQ,KAAd,EAEE,MAAI;AACJI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAjB;AACC,KAJH;AAKA,SAAKY,UAAL,GAAkB,IAAlB;AACH,GAXD;;AAaAU,EAAAA,SAAS,GAAC,MAAI;AACd,WACE;AAAK,qBAAc,KAAnB;AACA,MAAA,WAAW,EAAE,KAAKd,WADlB;AAEA,MAAA,YAAY,EAAE,KAAKA,WAFnB;AAGA,MAAA,MAAM,EAAE,KAAKK,MAHb;AAIA,MAAA,SAAS,MAJT;AAIU,MAAA,SAAS,EAAG,+BAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARC;;AASE,MAAIU,KAAK,GAAG,EAAZ;AACA,MAAId,MAAM,GAAG,EAAb;AACA,MAAIe,YAAY,GAAG,EAAnB;AACA,MAAIC,QAAQ,GAAG,IAAf;;AAEA,OAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAE,KAAK1B,KAAL,CAAWC,KAA5B,EAAkCyB,CAAC,EAAnC,EAAsC;AAChC,QAAIC,KAAK,GAAG,EAAZ;;AAEA,QAAGD,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAAf,IAAoBA,CAAC,IAAI,EAA5B,EAA+B;AAC7BC,MAAAA,KAAK,GAAGD,CAAR;AACD;;AAEDH,IAAAA,KAAK,CAACK,IAAN,CACE;AACA,MAAA,GAAG,EAAEF,CADL;AAEA,MAAA,SAAS,EAAC,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGC,KAHH,CADF;AAQE,QAAIE,YAAY,GAAG,EAAnB;;AACF,QAAGH,CAAC,KAAK,KAAK1B,KAAL,CAAWG,GAApB,EAAwB;AACtB0B,MAAAA,YAAY,GAAGH,CAAf;AACD;;AACCF,IAAAA,YAAY,CAACI,IAAb,CAAkB;AAChB,MAAA,GAAG,EAAEF,CADW;AAEhB,MAAA,SAAS,EAAC,YAFM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGfG,YAHe,CAAlB;;AAMA,QAAGH,CAAC,KAAK,KAAK1B,KAAL,CAAWG,GAApB,EAAwB;AACtBsB,MAAAA,QAAQ,GAAG,yBAAM,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACD,KAFD,MAEM;AACJA,MAAAA,QAAQ,GAAG,IAAX;AACD;;AACD,QAAIK,SAAS,GAAG,MAAhB;;AAEA,QAAGJ,CAAC,GAAC,KAAK1B,KAAL,CAAWG,GAAhB,EAAoB;AAClB2B,MAAAA,SAAS,IAAI,gBAAb;AACD;;AACDrB,IAAAA,MAAM,CAACmB,IAAP,CACI;AACA,mBAAWF,CADX;AAEA,MAAA,UAAU,EAAE,KAAKrB,UAFjB;AAGA,MAAA,WAAW,EAAI,KAAKA,UAHpB;AAIA,MAAA,UAAU,EAAI,KAAKS,MAJnB;AAKA,MAAA,MAAM,EAAI,KAAKA,MALf;AAMA,MAAA,GAAG,EAAEY,CANL;AAOA,MAAA,SAAS,EAAC,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQA;AAAK,mBAAWA,CAAhB;AAAmB,MAAA,SAAS,EAAEI,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,EASA;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,EAUCL,QAVD,CADJ;AAcD;;AACP,SAEE;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIF,KADJ,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACId,MADJ,CAJF,EAOG;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEe,YADF,CAPH,CADD,CAFF,CAFF;AAoBH;;AACD,MAAMO,GAAN,SAAkBvC,KAAK,CAACwC,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACtC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AACDuC,EAAAA,MAAM,GAAE;AACN,UAAMC,SAAS,GAAG,IAAIpC,MAAJ,EAAlB;AACF,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAI,MAAA,GAAG,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADvB,EAEE;AAAO,MAAA,IAAI,EAAG,MAAd;AAAqB,MAAA,EAAE,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA,CADA,EAOA;AAAI,MAAA,GAAG,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGoC,SADH,CAPA,CADF,CADF,CADF;AAiBC;;AAvB+B;;AA0BlC,SAAQJ,GAAR,EAAYhC,MAAZ","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\nfunction submission(props){\n          var barName = this.getElementById(\"barName\").value;\n        } \n\n\nfunction Slider(){\n  state = {\n    slots: 10,\n    start:0,\n    end: 5,\n    labelMode: \"mid\",\n  }\n  onDragOver = (e) =>{ \n    e.preventDefault();\n  }\n  onDragStart = (e) =>{\n    let slider = e.target.dataset.slider; \n    this.sliderType = slider;\n  }\n  onDrag = (e) => {\n  }\n\n  onDrop = (e,target) =>{\n    let source = this.sliderType;\n    let slot = Number(e.target.dataset.slot);\n\n      if(isNaN(slot)) return;\n      this.setState({\n        end:slot\n      },()=>{\n        console.log(this.state);\n        })\n      this.sliderType = null;\n  }\n\n  MaxSlider=()=>{\n  return(\n    <div data-slider = \"max\"\n    onDragStart={this.onDragStart}\n    onTouchStart={this.onDragStart}\n    onDrag={this.onDrag}\n    draggable className = \"slider-thumb slider-thumb-max\"></div>\n    );\n}\n    let scale = [];\n    let slider = [];\n    let currentScale = [];\n    let maxThumb = null;\n\n    for(let i =0; i<=this.state.slots;i++){\n          let label = \"\";\n\n          if(i == 0 || i == 5 || i == 10){\n            label = i;\n          }\n\n          scale.push(\n            <div \n            key={i} \n            className=\"slot-scale\">\n              {label}\n              </div>\n            );\n\n            let currentLabel = \"\";\n          if(i === this.state.end){\n            currentLabel = i;\n          }\n            currentScale.push(<div \n              key={i} \n              className=\"slot-scale\">\n              {currentLabel}\n              </div>\n            );\n            if(i === this.state.end){\n              maxThumb = <this.MaxSlider />\n            } else{\n              maxThumb = null;\n            }\n            let lineClass = \"line\";\n\n            if(i<this.state.end){\n              lineClass += \" line-selected\";\n            }\n            slider.push(\n                <div\n                data-slot={i}\n                onDragOver={this.onDragOver}\n                onTouchMove = {this.onDragOver}\n                onTouchEnd = {this.onDrop}\n                onDrop = {this.onDrop}\n                key={i}\n                className=\"slot\">\n                <div data-slot={i} className={lineClass}/>\n                <span className=\"scale-mark\"></span>\n                {maxThumb}\n                </div>\n              );\n          }\n    return(\n        \n      <div align=\"center\">\n        <h2> Slider for Me</h2>\n        <div className=\"topSlider\">\n         <div className = \"slider-container\">\n           <div className = \"slider-scale\">\n              {scale}\n           </div>\n           <div className=\"slider\">\n              {slider}\n            </div>\n            <div className=\"slider-selected-scale\">\n             {currentScale}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  \n}\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n    const craftBeer = new Slider();\n  return (\n    <div className=\"App\">\n      <header>\n        <form>\n        <li key=\"barName\">\n        <label>\n          What is the Barname: <br/>\n          <input type = \"text\" id=\"barName\"/>\n        </label>\n        </li>\n        <li key=\"craft\">\n          {craftBeer}\n        </li>\n        </form>\n       </header>\n    </div>\n  );\n  }\n}\n\nexport {App,Slider};\n"]},"metadata":{},"sourceType":"module"}