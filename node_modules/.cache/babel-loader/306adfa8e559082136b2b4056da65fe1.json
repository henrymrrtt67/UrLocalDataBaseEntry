{"ast":null,"code":"import _defineProperty from \"/Users/henrymerritt/Documents/UrLocal/urlocalbackend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//importing all relevant files to this file.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Slider from './Slider';\nimport Checkbox from './checkBox'; //importing css to this file\n\nimport './App.css'; // creating a Constant for the options that the users can click on\n\nconst OPTIONS = [\"Wine\", \"Beer\", \"Spirits\"]; //Submission for later use in order to return to API and place into database through Python\n\nfunction submission(props) {\n  var barName = this.getElementById(\"barName\").value;\n} //overall App class which takes all\n\n\nclass App extends React.Component {\n  //constructor for the App class in which a super with the returned values passed through\n  constructor(props) {\n    super(props); //sets the checkbox values to false so it can be presented so to people.\n\n    this.selectAllCheckboxes = isSelected => {\n      Object.keys(this.state.checkboxes).forEach(checkbox => {\n        // Sets all values to a specificially passed through value\n        this.setState(prevState => ({\n          checkboxes: _objectSpread({}, prevState.checkboxes, {\n            [checkbox]: isSelected\n          })\n        }));\n      });\n    };\n\n    this.selectAll = () => this.selectAllCheckboxes(true);\n\n    this.deselectAll = () => this.selectAllCheckboxes(false);\n\n    this.handleCheckboxChange = changeEvent => {\n      //ginds the specific checkbox to be checked off\n      const name = changeEvent.target.name; // changes the state dependant on whether it was previously true or false\n\n      this.setState(prevState => ({\n        checkboxes: _objectSpread({}, prevState.checkboxes, {\n          [name]: !prevState.checkboxes[name]\n        })\n      }));\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n      Object.keys(this.state.checkboxes).filter(checkbox => this.state.checkboxes[checkbox]).forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n    };\n\n    this.createCheckbox = option => React.createElement(Checkbox, {\n      label: option,\n      isSelected: this.state.checkboxes[option],\n      onCheckboxChange: this.handleCheckboxChange,\n      key: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n\n    this.createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n    this.state = {\n      checkboxes: OPTIONS.reduce((options, option) => _objectSpread({}, options, {\n        [option]: false\n      }), {})\n    };\n  } // is a super function in order to select all values either selecting or de-selecting\n\n\n  //calls the render function\n  render() {\n    //this is the return function that returns the html that helps create the app\n    return (//a div class in order to have the specific section in question\n      React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"What is the Barname: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"barName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" Craft Beer \"), React.createElement(Slider, {\n        id: \"craftBeerSlider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" Wine List Complexity\"), React.createElement(Slider, {\n        id: \"wineListSlider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Wine, Beer Or Spirits \"), React.createElement(\"div\", {\n        className: \"checkboxes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.createCheckboxes()), React.createElement(\"div\", {\n        className: \"fileUploader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"dataFile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"submitButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-success btn-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Submit\")))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js"],"names":["React","ReactDOM","Slider","Checkbox","OPTIONS","submission","props","barName","getElementById","value","App","Component","constructor","selectAllCheckboxes","isSelected","Object","keys","state","checkboxes","forEach","checkbox","setState","prevState","selectAll","deselectAll","handleCheckboxChange","changeEvent","name","target","handleFormSubmit","formSubmitEvent","preventDefault","filter","console","log","createCheckbox","option","createCheckboxes","map","reduce","options","render"],"mappings":"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","sourcesContent":["//importing all relevant files to this file.\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Slider from './Slider'\nimport Checkbox from './checkBox';\n\n//importing css to this file\nimport './App.css';\n\n// creating a Constant for the options that the users can click on\nconst OPTIONS = [\"Wine\", \"Beer\", \"Spirits\"];\n\n//Submission for later use in order to return to API and place into database through Python\nfunction submission(props){\n          var barName = this.getElementById(\"barName\").value;\n        } \n\n\n//overall App class which takes all\nclass App extends React.Component {\n  //constructor for the App class in which a super with the returned values passed through\n  constructor(props){\n    super(props);\n    //sets the checkbox values to false so it can be presented so to people.\n    this.state={\n      checkboxes: OPTIONS.reduce(\n          (options, option) => ({\n            ...options,\n            [option]:false\n          }),\n          {}\n        )\n\n    };\n  }\n  // is a super function in order to select all values either selecting or de-selecting\n  selectAllCheckboxes = isSelected => {\n    Object.keys(this.state.checkboxes).forEach(checkbox => {\n      // Sets all values to a specificially passed through value\n      this.setState(prevState => ({\n        checkboxes: {\n          ...prevState.checkboxes,\n          [checkbox]: isSelected\n        }\n      }));\n    });\n  };\n\n  // allows for a passing through in order to select all checkboxes as true\n  selectAll = () => this.selectAllCheckboxes(true);\n  // allows for a passing through in order to select all checkboxes as false\n  deselectAll = () => this.selectAllCheckboxes(false);\n\n  // allows for the changing between true and false for individual checkboxes\n  handleCheckboxChange = changeEvent => {\n    //ginds the specific checkbox to be checked off\n    const { name } = changeEvent.target;\n    // changes the state dependant on whether it was previously true or false\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n    //allows for event and changing of the checkbox\n   handleFormSubmit = formSubmitEvent => {\n    formSubmitEvent.preventDefault();\n\n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n  };\n\n  // allows for the creation within this class whilst using the imported files\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n  // creates all the checkboxes based on the constants that are the options\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n  //calls the render function\n  render(){\n    //this is the return function that returns the html that helps create the app\n    return (\n      //a div class in order to have the specific section in question\n      <div className=\"App\">\n        <header>\n         <form>\n           <label>\n             <h2>What is the Barname: <br/></h2>\n              <input type = \"text\" id=\"barName\"/>\n            </label>\n            <h2> Craft Beer </h2>\n            <Slider id=\"craftBeerSlider\"/>\n            <h2> Wine List Complexity</h2>\n            <Slider id=\"wineListSlider\"/>\n            <h2>Wine, Beer Or Spirits </h2>\n            <div className = \"checkboxes\">\n              {this.createCheckboxes()}\n            </div>\n            <div className = \"fileUploader\">\n              <input type=\"file\" name=\"file\" id=\"dataFile\"/>\n            </div>\n            <div className = \"submitButton\">\n              <button type=\"button\" class=\"btn btn-success btn-block\"> \n              Submit</button>\n            </div>\n        </form>\n       </header>\n    </div>\n  );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}