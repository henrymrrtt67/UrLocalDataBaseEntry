{"ast":null,"code":"import _defineProperty from \"/Users/henrymerritt/Documents/dataBaseEntry/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrymerritt/Documents/dataBaseEntry/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//importing all relevant files to this file.\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Slider from './Slider';\nimport Checkbox from './checkBox';\nimport axios from 'axios'; //importing css to this file\n\nimport './App.css'; // creating a Constant for the options that the users can click on\n\nconst OPTIONS = [\"Wine\", \"Beer\", \"Spirits\"];\nconst inputParsers = {\n  uppercase(input) {\n    return input.toUpperCase();\n  },\n\n  number(input) {\n    return parseFloat(input);\n  }\n\n}; //overall App class which takes all\n\nclass App extends React.Component {\n  //constructor for the App class in which a super with the returned values passed through\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = changeEvent => {\n      //ginds the specific checkbox to be checked off\n      const name = changeEvent.target.name; // changes the state dependant on whether it was previously true or false\n\n      this.setState(prevState => ({\n        checkboxes: _objectSpread({}, prevState.checkboxes, {\n          [name]: !prevState.checkboxes[name]\n        })\n      }));\n    };\n\n    this.createCheckbox = option => React.createElement(Checkbox, {\n      label: option,\n      isSelected: this.state.checkboxes[option],\n      onCheckboxChange: this.handleCheckboxChange,\n      key: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n\n    this.createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n    this.handleSubmit = this.handleSubmit.bind(this); //sets the checkbox values to false so it can be presented so to people.\n\n    this.state = {\n      ProductData: [],\n      checkboxes: OPTIONS.reduce((options, option) => _objectSpread({}, options, {\n        [option]: false\n      }), {}),\n      barname: '',\n      craftSlide: 0,\n      complexity: 0,\n      wineCheck: false,\n      beerCheck: false,\n      spiritsCheck: false,\n      location: '',\n      lqMeal: 0,\n      lqBeer: 0,\n      uqMeal: 0,\n      uqBeer: 0\n    };\n  } // is a super function in order to select all values either selecting or de-selecting\n\n\n  handleChange(event) {\n    const name = event.target.name;\n    this.setState({\n      [name]: [name].value\n    });\n  } // allows for a passing through in order to select all checkboxes as true  \n  // allows for the changing between true and false for individual checkboxes\n\n\n  //allows for event and changing of the checkbox\n  async handleSubmit(event) {\n    const result = await fetch('https://localhost:5001/api/bars')\n    /*axios.get('https://localhost:5001/api/bars'),{\n    \tbarName: this.state.barname,\n    \tcraftSlide: this.state.craftSlide,\n    \tcomplexity: this.state.complexity,\n    \twineCheck: this.state.wineCheck,\n    \tbeerCheck: this.state.beerCheck,\n    \tspiritsCheck: this.state.spiritscheck,\n    \tlqMeal: this.state.lqMeal,\n    \tlqBeer: this.state.lqBeer,\n    \tuqMeal: this.state.uqMeal,\n    \tuqBeer: this.state.uqMeal,\n    \tlocation: this.state.location\n    })*/\n    .then(response => response.json()).catch(error => {\n      alert(error);\n    });\n  } // allows for the creation within this class whilst using the imported files\n\n\n  //calls the render function\n  render() {\n    const beerSlider = React.createElement(Slider, {\n      name: \"craftSlide\",\n      onChange: this.handleChange,\n      value: this.state.craftSlide,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    });\n    const complexity = React.createElement(Slider, {\n      name: \"complexity\",\n      onChange: this.handleChange,\n      value: this.state.complexity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }); //this is the return function that returns the html that helps create the app\n\n    return (//a div class in order to have the specific section in question\n      React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"What is the Barname: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"barname\",\n        onChange: this.handleChange.bind(this),\n        value: this.state.barname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" Craft Beer \"), beerSlider, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" Wine List Complexity\"), complexity, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Liquor Specialty Checkboxes: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"checkboxes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: this.onCheckboxChange,\n        onChange: this.handleCheckboxChange,\n        key: \"Wine\",\n        name: \"wineCheck\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), OPTIONS[0], React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"beerCheck\",\n        defaultChecked: this.onCheckboxChange,\n        onChange: this.handleCheckboxChange,\n        key: \"Beer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), OPTIONS[1], React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"spiritsCheck\",\n        defaultChecked: this.onCheckboxChange,\n        onChange: this.handleCheckboxChange,\n        key: \"Spirits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), OPTIONS[2]), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), \"Lower Quartile Meal Price:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"lqMeal\",\n        onChange: this.handleChange.bind(this),\n        value: this.state.lqMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }), \"Lower Quartile Beer Price:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"lqBeer\",\n        onChange: this.handleChange.bind(this),\n        value: this.state.lqBeer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), \"Upper Quartile Meal Price: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"uqMeal\",\n        onChange: this.handleChange.bind(this),\n        value: this.state.uqMeal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), \"Upper Quartile Beer Price:\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        name: \"uqBeer\",\n        onChange: this.handleChange.bind(this),\n        value: this.state.uqBeer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Where is the Bar Located: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        onChange: this.handleChange.bind(this),\n        value: this.state.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/henrymerritt/Documents/dataBaseEntry/src/App.js"],"names":["React","Component","ReactDOM","Slider","Checkbox","axios","OPTIONS","inputParsers","uppercase","input","toUpperCase","number","parseFloat","App","constructor","props","handleCheckboxChange","changeEvent","name","target","setState","prevState","checkboxes","createCheckbox","option","state","createCheckboxes","map","handleSubmit","bind","ProductData","reduce","options","barname","craftSlide","complexity","wineCheck","beerCheck","spiritsCheck","location","lqMeal","lqBeer","uqMeal","uqBeer","handleChange","event","value","result","fetch","then","response","json","catch","error","alert","render","beerSlider","onCheckboxChange"],"mappings":"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","sourcesContent":["//importing all relevant files to this file.\nimport React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport Slider from './Slider'\nimport Checkbox from './checkBox';\nimport axios from 'axios';\n\n//importing css to this file\nimport './App.css';\n\n// creating a Constant for the options that the users can click on\nconst OPTIONS = [\"Wine\", \"Beer\", \"Spirits\"];\n\nconst inputParsers = {\n\tuppercase(input){\n\t\treturn input.toUpperCase();\n\t},\n\tnumber(input){\n\t\treturn parseFloat(input);\n\t},\n};\n\n\n\n//overall App class which takes all\nclass App extends React.Component {\n  //constructor for the App class in which a super with the returned values passed through\n  constructor(props){\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    //sets the checkbox values to false so it can be presented so to people.\n    this.state={\n    \tProductData: [],\n      checkboxes: OPTIONS.reduce(\n          (options, option) => ({\n            ...options,\n            [option]:false\n          }),\n          {}\n        ),\n      \tbarname: '',\n  \t\tcraftSlide: 0,\n  \t\tcomplexity: 0,\n      \twineCheck: false,\n      \tbeerCheck: false,\n      \tspiritsCheck: false,\n      \tlocation: '',\n      \tlqMeal: 0,\n      \tlqBeer: 0,\n      \tuqMeal: 0,\n      \tuqBeer: 0,\n    };\n  }\n  \n\n  // is a super function in order to select all values either selecting or de-selecting\n  handleChange(event){\n  \tconst { name } = event.target;\n  \tthis.setState({[name]: [name].value})\n  }\n\n  // allows for a passing through in order to select all checkboxes as true  \n\n  // allows for the changing between true and false for individual checkboxes\n  handleCheckboxChange = changeEvent => {\n    //ginds the specific checkbox to be checked off\n    const { name } = changeEvent.target;\n    // changes the state dependant on whether it was previously true or false\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n    //allows for event and changing of the checkbox\n    async handleSubmit(event){\n    \tconst result = await fetch('https://localhost:5001/api/bars')\n   \t\t/*axios.get('https://localhost:5001/api/bars'),{\n  \t\t\t\tbarName: this.state.barname,\n  \t\t\t\tcraftSlide: this.state.craftSlide,\n  \t\t\t\tcomplexity: this.state.complexity,\n  \t\t\t\twineCheck: this.state.wineCheck,\n  \t\t\t\tbeerCheck: this.state.beerCheck,\n  \t\t\t\tspiritsCheck: this.state.spiritscheck,\n  \t\t\t\tlqMeal: this.state.lqMeal,\n  \t\t\t\tlqBeer: this.state.lqBeer,\n  \t\t\t\tuqMeal: this.state.uqMeal,\n  \t\t\t\tuqBeer: this.state.uqMeal,\n  \t\t\t\tlocation: this.state.location\n  \t\t\t})*/\n  \t\t\t.then(response => response.json())\n  \t\t\t.catch(error => {alert(error)})\n  \t\t\t}\n\n  // allows for the creation within this class whilst using the imported files\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n  // creates all the checkboxes based on the constants that are the options\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n  //calls the render function\n  render(){\n  \tconst beerSlider = <Slider name=\"craftSlide\" onChange={this.handleChange} value={this.state.craftSlide} />;\n  \tconst complexity = <Slider name=\"complexity\" onChange={this.handleChange} value={this.state.complexity}/>; \n\n    //this is the return function that returns the html that helps create the app\n    return (\n      //a div class in order to have the specific section in question\n      <div className=\"App\">\n        <header>\n         <form onSubmit = {this.handleSubmit}>\n           <label>\n             <h3>What is the Barname: <br/></h3>\n              <input type = \"text\" name =\"barname\" onChange={this.handleChange.bind(this)} value={this.state.barname} />\n            </label>\n            <h3> Craft Beer </h3>\n            {beerSlider}\n            <h3> Wine List Complexity</h3>\n            {complexity}\n            <h3>Liquor Specialty Checkboxes: <br/></h3>\n            <div className = \"checkboxes\">\n              <input type =\"checkbox\"\n              defaultChecked={this.onCheckboxChange}\n              onChange = {this.handleCheckboxChange} \n              key = \"Wine\"\n              name = \"wineCheck\"/>\n              {OPTIONS[0]}\n               <input type =\"checkbox\"\n              name=\"beerCheck\"\n              defaultChecked={this.onCheckboxChange}\n              onChange = {this.handleCheckboxChange} \n              key = \"Beer\" /> \n              {OPTIONS[1]}\n               <input type =\"checkbox\"\n              name=\"spiritsCheck\"\n              defaultChecked={this.onCheckboxChange}\n              onChange = {this.handleCheckboxChange}\n              key=\"Spirits\" />\n              {OPTIONS[2]}\n            </div><br/>\n            Lower Quartile Meal Price:<br/>\n           \t<input type=\"number\" \n           \tname=\"lqMeal\" \n           \tonChange={this.handleChange.bind(this)}\n           \tvalue = {this.state.lqMeal}\n           \t/><br/>\n           \tLower Quartile Beer Price:<br/>\n           \t<input type=\"number\" \n           \tname=\"lqBeer\" \n           \tonChange={this.handleChange.bind(this)}\n           \tvalue = {this.state.lqBeer}\n           \t/>\n           \t<br/>\n           \tUpper Quartile Meal Price: <br/>\n           \t<input type=\"number\" \n           \tname=\"uqMeal\" \n           \tonChange={this.handleChange.bind(this)}\n           \tvalue = {this.state.uqMeal}\n           \t/>\n           \t<br/>\n           \tUpper Quartile Beer Price:\n           \t<br/>\n           \t<input type=\"number\" \n           \tname=\"uqBeer\" \n           \tonChange={this.handleChange.bind(this)}\n           \tvalue = {this.state.uqBeer}\n           \t/> \n           \t<br/>\n             <h2>Where is the Bar Located: <br/></h2>\n              <input type = \"text\" name =\"location\" onChange={this.handleChange.bind(this)} value={this.state.location} /><br/>\n            <input type=\"submit\" value=\"Submit\"/>\n        </form>\n       </header>\n    </div>\n  );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}