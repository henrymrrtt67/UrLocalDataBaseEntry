{"ast":null,"code":"var _jsxFileName = \"/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\n\nfunction submission(props) {\n  var barName = this.getElementById(\"barName\").value;\n}\n\nclass Slider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      slots: 10,\n      start: 0,\n      end: 10,\n      labelMode: \"mid\"\n    };\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDragStart = e => {\n      let slider = e.target.dataset.slider;\n      this.sliderType = slider;\n    };\n\n    this.onDrop = (e, target) => {\n      let source = this.sliderType;\n      let slot = Number(e.target.dataset.slot);\n      console.log(\"slot: \", slot);\n      if (isNaN(slot)) return;\n\n      if (source === \"max\") {\n        if (slot > this.state.end) return;\n        this.setState({\n          end: slot\n        }, () => {\n          console.log(this.state);\n        });\n      }\n\n      this.sliderType = null;\n    };\n\n    this.MaxSlider = () => {\n      return React.createElement(\"div\", {\n        \"data-slider\": \"max\",\n        onDragStart: this.onDragStart,\n        onTouchStart: this.onDragStart,\n        draggable: true,\n        className: \"slider-thumb slider-thumb-max\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    let scale = [];\n    let slider = [];\n    let currentScale = [];\n    let minThumb = null;\n    let maxThumb = null;\n\n    for (let i = 0; i <= this.state.slots; i++) {\n      let label = \"\";\n\n      if (i == 0 || i == 5 || i == 10) {\n        label = i;\n      }\n\n      scale.push(React.createElement(\"div\", {\n        key: i,\n        className: \"slot-scale\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, label));\n      let currentLabel = \"\";\n\n      if (i === this.state.start || i === this.state.end) {\n        currentLabel = i;\n      }\n\n      currentScale.push(React.createElement(\"div\", {\n        key: i,\n        className: \"slot-scale\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, label));\n\n      if (i === this.state.end) {\n        maxThumb = React.createElement(this.MaxSlider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      } else {\n        maxThumb = null;\n      }\n\n      let lineClass = \"line\";\n\n      if (i >= this.state.start && i < this.state.end) {\n        lineClass += \" line-selected\";\n      }\n\n      slider.push(React.createElement(\"div\", {\n        \"data-slot\": i,\n        onDragOver: this.onDragOver,\n        onTouchMove: this.onDragOver,\n        onTouchEnd: this.onDrop,\n        onDrop: this.onDrop,\n        key: i,\n        className: \"slot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"data-slot\": i,\n        className: lineClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"scale-mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), maxThumb));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \" React Slider\"), React.createElement(\"div\", {\n      className: \"topSlider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-scale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, scale), React.createElement(\"div\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, slider), React.createElement(\"div\", {\n      className: \"slider-selected-scale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, currentScale))));\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"What is the Barname: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"barName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js"],"names":["React","ReactDOM","submission","props","barName","getElementById","value","Slider","Component","state","slots","start","end","labelMode","onDragOver","e","preventDefault","onDragStart","slider","target","dataset","sliderType","onDrop","source","slot","Number","console","log","isNaN","setState","MaxSlider","render","scale","currentScale","minThumb","maxThumb","i","label","push","currentLabel","lineClass","App","constructor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\nfunction submission(props){\n          var barName = this.getElementById(\"barName\").value;\n        } \n\n\nclass Slider extends React.Component{\n  state = {\n    slots: 10,\n    start:0,\n    end: 10,\n    labelMode: \"mid\",\n  }\n  onDragOver = (e) =>{ e.preventDefault();}\n  onDragStart = (e) =>{\n    let slider = e.target.dataset.slider; \n    this.sliderType = slider;\n  }\n  onDrop = (e,target) =>{\n    let source = this.sliderType;\n    let slot = Number(e.target.dataset.slot);\n    console.log(\"slot: \", slot);\n      if(isNaN(slot)) return;\n      if(source===\"max\"){\n        if(slot>this.state.end) return;\n        this.setState({\n          end:slot\n        },()=>{\n          console.log(this.state);\n        })\n      }\n      this.sliderType = null;\n  }\n\n  MaxSlider=()=>{\n  return(\n    <div data-slider = \"max\"\n    onDragStart={this.onDragStart}\n    onTouchStart={this.onDragStart}\n    draggable className = \"slider-thumb slider-thumb-max\"></div>\n    );\n}\n\n  render(){\n    let scale = [];\n    let slider = [];\n    let currentScale = [];\n    let minThumb = null;\n    let maxThumb = null;\n    for(let i =0; i<=this.state.slots;i++){\n          let label = \"\";\n          if(i == 0 || i == 5 || i == 10){\n            label = i;\n          }\n          scale.push(\n            <div \n            key={i} \n            className=\"slot-scale\">\n              {label}\n              </div>\n            );\n            let currentLabel = \"\";\n          if(i === this.state.start || i === this.state.end){\n            currentLabel = i;\n          }\n            currentScale.push(<div \n              key={i} \n            className=\"slot-scale\">\n              {label}\n              </div>\n            );\n            if(i === this.state.end){\n              maxThumb = <this.MaxSlider />\n            } else{\n              maxThumb = null;\n            }\n            let lineClass = \"line\";\n\n            if(i>= this.state.start && i<this.state.end){\n              lineClass += \" line-selected\";\n            }\n            slider.push(\n                <div\n                data-slot={i}\n                onDragOver={this.onDragOver}\n                onTouchMove = {this.onDragOver}\n                onTouchEnd = {this.onDrop}\n                onDrop = {this.onDrop}\n                key={i}\n                className=\"slot\">\n                <div data-slot={i} className={lineClass}/>\n                <span className=\"scale-mark\"></span>\n                {maxThumb}\n                </div>\n              );\n          }\n    return(\n        \n      <div>\n        <h2> React Slider</h2>\n        <div className=\"topSlider\">\n         <div className = \"slider-container\">\n           <div className = \"slider-scale\">\n              {scale}\n           </div>\n           <div className=\"slider\">\n              {slider}\n            </div>\n            <div className=\"slider-selected-scale\">\n             {currentScale}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <header>\n        <form>\n        <label>\n          What is the Barname: <br/>\n          <input type = \"text\" id=\"barName\"/>\n        </label>\n        </form>\n       </header>\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}