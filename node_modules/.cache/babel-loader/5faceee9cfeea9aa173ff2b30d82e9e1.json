{"ast":null,"code":"import _defineProperty from \"/Users/henrymerritt/Documents/UrLocal/urlocalbackend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Slider from './Slider';\nimport Checkbox from './checkBox';\nimport './App.css';\nconst OPTIONS = [\"Wine\", \"Beer\", \"Spirits\"];\n\nfunction submission(props) {\n  var barName = this.getElementById(\"barName\").value;\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.selectAllCheckboxes = isSelected => {\n      Object.keys(this.state.checkboxes).forEach(checkbox => {\n        // BONUS: Can you explain why we pass updater function to setState instead of an object?\n        this.setState(prevState => ({\n          checkboxes: _objectSpread({}, prevState.checkboxes, {\n            [checkbox]: isSelected\n          })\n        }));\n      });\n    };\n\n    this.selectAll = () => this.selectAllCheckboxes(true);\n\n    this.deselectAll = () => this.selectAllCheckboxes(false);\n\n    this.handleCheckboxChange = changeEvent => {\n      const name = changeEvent.target.name;\n      this.setState(prevState => ({\n        checkboxes: _objectSpread({}, prevState.checkboxes, {\n          [name]: !prevState.checkboxes[name]\n        })\n      }));\n    };\n\n    this.handleFormSubmit = formSubmitEvent => {\n      formSubmitEvent.preventDefault();\n      Object.keys(this.state.checkboxes).filter(checkbox => this.state.checkboxes[checkbox]).forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n    };\n\n    this.createCheckbox = option => React.createElement(Checkbox, {\n      label: option,\n      isSelected: this.state.checkboxes[option],\n      onCheckboxChange: this.handleCheckboxChange,\n      key: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n\n    this.createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n    this.state = {\n      checkboxes: OPTIONS.reduce((options, option) => _objectSpread({}, options, {\n        [option]: false\n      }), {})\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"What is the Barname: \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"barName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \" Craft Beer \"), React.createElement(Slider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \" Wine List Complexity\"), React.createElement(Slider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Wine Or Beer \"), this.createCheckboxes())));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js"],"names":["React","ReactDOM","Slider","Checkbox","OPTIONS","submission","props","barName","getElementById","value","App","Component","constructor","selectAllCheckboxes","isSelected","Object","keys","state","checkboxes","forEach","checkbox","setState","prevState","selectAll","deselectAll","handleCheckboxChange","changeEvent","name","target","handleFormSubmit","formSubmitEvent","preventDefault","filter","console","log","createCheckbox","option","createCheckboxes","map","reduce","options","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Slider from './Slider'\nimport Checkbox from './checkBox';\n\n\nimport './App.css';\n\nconst OPTIONS = [\"Wine\", \"Beer\", \"Spirits\"];\nfunction submission(props){\n          var barName = this.getElementById(\"barName\").value;\n        } \n\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      checkboxes: OPTIONS.reduce(\n          (options, option) => ({\n            ...options,\n            [option]:false\n          }),\n          {}\n        )\n    };\n  }\n  selectAllCheckboxes = isSelected => {\n    Object.keys(this.state.checkboxes).forEach(checkbox => {\n      // BONUS: Can you explain why we pass updater function to setState instead of an object?\n      this.setState(prevState => ({\n        checkboxes: {\n          ...prevState.checkboxes,\n          [checkbox]: isSelected\n        }\n      }));\n    });\n  };\n\n  selectAll = () => this.selectAllCheckboxes(true);\n\n  deselectAll = () => this.selectAllCheckboxes(false);\n\n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n\n   handleFormSubmit = formSubmitEvent => {\n    formSubmitEvent.preventDefault();\n\n    Object.keys(this.state.checkboxes)\n      .filter(checkbox => this.state.checkboxes[checkbox])\n      .forEach(checkbox => {\n        console.log(checkbox, \"is selected.\");\n      });\n  };\n\n  createCheckbox = option => (\n    <Checkbox\n      label={option}\n      isSelected={this.state.checkboxes[option]}\n      onCheckboxChange={this.handleCheckboxChange}\n      key={option}\n    />\n  );\n\n  createCheckboxes = () => OPTIONS.map(this.createCheckbox);\n\n\n  render(){\n  return (\n    <div className=\"App\">\n      <header>\n        <form>\n        <label>\n          <h2>What is the Barname: <br/></h2>\n          <input type = \"text\" id=\"barName\"/>\n        </label>\n        <h2> Craft Beer </h2>\n          <Slider />\n        <h2> Wine List Complexity</h2>\n        <Slider />\n        <h2>Wine Or Beer </h2>\n        {this.createCheckboxes()}\n        </form>\n       </header>\n    </div>\n  );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}