{"ast":null,"code":"var _jsxFileName = \"/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/Slider.js\";\n\nclass Slider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      slots: 10,\n      start: 0,\n      end: 5,\n      labelMode: \"mid\"\n    };\n\n    this.onDragOver = e => {\n      e.preventDefault();\n    };\n\n    this.onDragStart = e => {\n      let slider = e.target.dataset.slider;\n      this.sliderType = slider;\n    };\n\n    this.onDrag = e => {};\n\n    this.onDrop = (e, target) => {\n      let source = this.sliderType;\n      let slot = Number(e.target.dataset.slot);\n      if (isNaN(slot)) return;\n      this.setState({\n        end: slot\n      }, () => {\n        console.log(this.state);\n      });\n      this.sliderType = null;\n    };\n\n    this.MaxSlider = () => {\n      return React.createElement(\"div\", {\n        \"data-slider\": \"max\",\n        onDragStart: this.onDragStart,\n        onTouchStart: this.onDragStart,\n        onDrag: this.onDrag,\n        draggable: true,\n        className: \"slider-thumb slider-thumb-max\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    };\n  }\n\n  render() {\n    let scale = [];\n    let slider = [];\n    let currentScale = [];\n    let maxThumb = null;\n\n    for (let i = 0; i <= this.state.slots; i++) {\n      let label = \"\";\n\n      if (i == 0 || i == 5 || i == 10) {\n        label = i;\n      }\n\n      scale.push(React.createElement(\"div\", {\n        key: i,\n        className: \"slot-scale\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, label));\n      let currentLabel = \"\";\n\n      if (i === this.state.end) {\n        currentLabel = i;\n      }\n\n      currentScale.push(React.createElement(\"div\", {\n        key: i,\n        className: \"slot-scale\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, currentLabel));\n\n      if (i === this.state.end) {\n        maxThumb = React.createElement(this.MaxSlider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        });\n      } else {\n        maxThumb = null;\n      }\n\n      let lineClass = \"line\";\n\n      if (i < this.state.end) {\n        lineClass += \" line-selected\";\n      }\n\n      slider.push(React.createElement(\"div\", {\n        \"data-slot\": i,\n        onDragOver: this.onDragOver,\n        onTouchMove: this.onDragOver,\n        onTouchEnd: this.onDrop,\n        onDrop: this.onDrop,\n        key: i,\n        className: \"slot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        \"data-slot\": i,\n        className: lineClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"scale-mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), maxThumb));\n    }\n\n    return React.createElement(\"div\", {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" Slider for Me\"), React.createElement(\"div\", {\n      className: \"topSlider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"slider-scale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, scale), React.createElement(\"div\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, slider), React.createElement(\"div\", {\n      className: \"slider-selected-scale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, currentScale))));\n  }\n\n}","map":{"version":3,"sources":["/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/Slider.js"],"names":["Slider","React","Component","state","slots","start","end","labelMode","onDragOver","e","preventDefault","onDragStart","slider","target","dataset","sliderType","onDrag","onDrop","source","slot","Number","isNaN","setState","console","log","MaxSlider","render","scale","currentScale","maxThumb","i","label","push","currentLabel","lineClass"],"mappings":"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","sourcesContent":["class Slider extends React.Component{\n  state = {\n    slots: 10,\n    start:0,\n    end: 5,\n    labelMode: \"mid\",\n  }\n  onDragOver = (e) =>{ \n    e.preventDefault();\n  }\n  onDragStart = (e) =>{\n    let slider = e.target.dataset.slider; \n    this.sliderType = slider;\n  }\n  onDrag = (e) => {\n  }\n\n  onDrop = (e,target) =>{\n    let source = this.sliderType;\n    let slot = Number(e.target.dataset.slot);\n\n      if(isNaN(slot)) return;\n      this.setState({\n        end:slot\n      },()=>{\n        console.log(this.state);\n        })\n      this.sliderType = null;\n  }\n\n  MaxSlider=()=>{\n  return(\n    <div data-slider = \"max\"\n    onDragStart={this.onDragStart}\n    onTouchStart={this.onDragStart}\n    onDrag={this.onDrag}\n    draggable className = \"slider-thumb slider-thumb-max\"></div>\n    );\n}\n\n  render(){\n    let scale = [];\n    let slider = [];\n    let currentScale = [];\n    let maxThumb = null;\n\n    for(let i =0; i<=this.state.slots;i++){\n          let label = \"\";\n\n          if(i == 0 || i == 5 || i == 10){\n            label = i;\n          }\n\n          scale.push(\n            <div \n            key={i} \n            className=\"slot-scale\">\n              {label}\n              </div>\n            );\n\n            let currentLabel = \"\";\n          if(i === this.state.end){\n            currentLabel = i;\n          }\n            currentScale.push(<div \n              key={i} \n              className=\"slot-scale\">\n              {currentLabel}\n              </div>\n            );\n            if(i === this.state.end){\n              maxThumb = <this.MaxSlider />\n            } else{\n              maxThumb = null;\n            }\n            let lineClass = \"line\";\n\n            if(i<this.state.end){\n              lineClass += \" line-selected\";\n            }\n            slider.push(\n                <div\n                data-slot={i}\n                onDragOver={this.onDragOver}\n                onTouchMove = {this.onDragOver}\n                onTouchEnd = {this.onDrop}\n                onDrop = {this.onDrop}\n                key={i}\n                className=\"slot\">\n                <div data-slot={i} className={lineClass}/>\n                <span className=\"scale-mark\"></span>\n                {maxThumb}\n                </div>\n              );\n          }\n    return(\n        \n      <div align=\"center\">\n        <h2> Slider for Me</h2>\n        <div className=\"topSlider\">\n         <div className = \"slider-container\">\n           <div className = \"slider-scale\">\n              {scale}\n           </div>\n           <div className=\"slider\">\n              {slider}\n            </div>\n            <div className=\"slider-selected-scale\">\n             {currentScale}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}