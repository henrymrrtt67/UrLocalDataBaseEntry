{"ast":null,"code":"var _jsxFileName = \"/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nexport default App;\nimport './App.css';\n\nfunction submission(props) {\n  var barName = this.getElementById(\"barName\").value;\n}\n\nfunction setScale() {\n  for (let i = 0; i <= this.state.slots; i++) {\n    let label = \"\";\n\n    if (i == 0 || i == 5 || i == 10) {\n      label = i;\n    }\n\n    scale.push(React.createElement(\"div\", {\n      key: i,\n      className: \"slot-scale\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, label));\n  }\n\n  class Slider extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        slots: 10,\n        start: 0,\n        end: 10,\n        labelMode: \"mid\"\n      };\n    }\n\n    render() {\n      let scale = [];\n      let slider = [];\n      let currentScale = [];\n      let minThumb = null;\n      let maxThumb = null;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \" React Slider\"), React.createElement(\"div\", {\n        className: \"topSlider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"slider-scale\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, scale), React.createElement(\"div\", {\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, slider), React.createElement(\"div\", {\n        className: \"slider-selected-scale\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, currentScale))));\n    }\n\n  }\n\n  class App extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"What is the Barname: \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"barName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })))));\n    }\n\n  }\n}","map":{"version":3,"sources":["/Users/henrymerritt/Documents/UrLocal/urlocalbackend/src/App.js"],"names":["React","ReactDOM","App","submission","props","barName","getElementById","value","setScale","i","state","slots","label","scale","push","Slider","Component","start","end","labelMode","render","slider","currentScale","minThumb","maxThumb","constructor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,eAAeC,GAAf;AAEA,OAAO,WAAP;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAChB,MAAIC,OAAO,GAAG,KAAKC,cAAL,CAAoB,SAApB,EAA+BC,KAA7C;AACD;;AACP,SAASC,QAAT,GAAmB;AACjB,OAAI,IAAIC,CAAC,GAAE,CAAX,EAAcA,CAAC,IAAE,KAAKC,KAAL,CAAWC,KAA5B,EAAkCF,CAAC,EAAnC,EAAsC;AAChC,QAAIG,KAAK,GAAG,EAAZ;;AACA,QAAGH,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAAf,IAAoBA,CAAC,IAAI,EAA5B,EAA+B;AAC7BG,MAAAA,KAAK,GAAGH,CAAR;AACD;;AACDI,IAAAA,KAAK,CAACC,IAAN,CACE;AACA,MAAA,GAAG,EAAEL,CADL;AAEA,MAAA,SAAS,EAAC,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGG,KAHH,CADF;AAOD;;AAET,QAAMG,MAAN,SAAqBf,KAAK,CAACgB,SAA3B,CAAoC;AAAA;AAAA;AAAA,WAClCN,KADkC,GAC1B;AACNC,QAAAA,KAAK,EAAE,EADD;AAENM,QAAAA,KAAK,EAAC,CAFA;AAGNC,QAAAA,GAAG,EAAE,EAHC;AAINC,QAAAA,SAAS,EAAE;AAJL,OAD0B;AAAA;;AAOlCC,IAAAA,MAAM,GAAE;AACN,UAAIP,KAAK,GAAG,EAAZ;AACA,UAAIQ,MAAM,GAAG,EAAb;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,QAAQ,GAAG,IAAf;AACA,UAAIC,QAAQ,GAAG,IAAf;AACA,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAK,QAAA,SAAS,EAAG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIX,KADJ,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIQ,MADJ,CAJF,EAOG;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEC,YADF,CAPH,CADD,CAFF,CAFF;AAmBD;;AAhCiC;;AAkCpC,QAAMpB,GAAN,SAAkBF,KAAK,CAACgB,SAAxB,CAAkC;AAChCS,IAAAA,WAAW,CAACrB,KAAD,EAAO;AAChB,YAAMA,KAAN;AACD;;AACDgB,IAAAA,MAAM,GAAE;AACR,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADvB,EAEE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,EAAE,EAAC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADA,CADF,CADF,CADF;AAYC;;AAjB+B;AAoBjC","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nexport default App;\n\nimport './App.css';\nfunction submission(props){\n          var barName = this.getElementById(\"barName\").value;\n        } \n  function setScale(){\n    for(let i =0; i<=this.state.slots;i++){\n          let label = \"\";\n          if(i == 0 || i == 5 || i == 10){\n            label = i;\n          }\n          scale.push(\n            <div \n            key={i} \n            className=\"slot-scale\">\n              {label}\n              </div>\n            );\n        }\n  \nclass Slider extends React.Component{\n  state = {\n    slots: 10,\n    start:0,\n    end: 10,\n    labelMode: \"mid\",\n  }\n  render(){\n    let scale = [];\n    let slider = [];\n    let currentScale = [];\n    let minThumb = null;\n    let maxThumb = null;\n    return(\n        \n      <div>\n        <h2> React Slider</h2>\n        <div className=\"topSlider\">\n         <div className = \"slider-container\">\n           <div className = \"slider-scale\">\n              {scale}\n           </div>\n           <div className=\"slider\">\n              {slider}\n            </div>\n            <div className=\"slider-selected-scale\">\n             {currentScale}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <header>\n        <form>\n        <label>\n          What is the Barname: <br/>\n          <input type = \"text\" id=\"barName\"/>\n        </label>\n        </form>\n       </header>\n    </div>\n  );\n  }\n}\n\n}"]},"metadata":{},"sourceType":"module"}